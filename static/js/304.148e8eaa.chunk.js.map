{"version":3,"file":"static/js/304.148e8eaa.chunk.js","mappings":"0QAGaA,EAAOC,EAAAA,GAAAA,IAAH,0CAIJC,EAAQD,EAAAA,GAAAA,GAAH,gEAKLE,EAAaF,EAAAA,GAAAA,GAAH,yOAUVG,EAAaH,EAAAA,GAAAA,GAAH,iNAOVI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,kDAIVM,EAASN,EAAAA,GAAAA,IAAH,uRAeNO,EAAaP,EAAAA,GAAAA,EAAH,6N,SCZvB,EA/Ba,WACX,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAcC,KAAKL,EACpB,GAAE,KAGD,+BACE,UAACX,EAAD,YACE,SAACE,EAAD,8BACA,SAACC,EAAD,UACGO,EAAOO,KAAI,SAAAC,GAAK,OACf,SAACd,EAAD,WACE,UAACC,EAAD,CAAYc,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMV,GAArD,WACE,SAACL,EAAD,CACEgB,IACGL,EAAMM,YAAN,8CAA2DN,EAAMM,aAEpEC,IAAKP,EAAMQ,SAEb,SAAClB,EAAD,UAAaU,EAAMQ,YARNR,EAAME,GADR,UAiB1B,C,mMCjCKO,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMb,EAAW,mCAAG,oGACFa,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAU,mCAAG,WAAMC,GAAN,uFACDL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBAAsCN,IADrC,cAClBE,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKVI,EAAO,mCAAG,WAAMD,GAAN,uFACEL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA8CN,IADhD,cACfE,EADe,yBAEdA,EAASC,KAAKK,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAMH,GAAN,uFACDL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA8CN,IAD7C,cAClBE,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKVM,EAAQ,mCAAG,WAAMC,GAAN,uFACCV,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,kBAAmDW,IADpD,cAChBT,EADgB,yBAEfA,EAASC,KAAKC,SAFC,2CAAH,qD","sources":["pages/Home/Home.styled.js","pages/Home/Home.jsx","services/Api.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Main = styled.div`\n  padding: 10px;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  color: white;\n`;\n\nexport const MoviesList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 35px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 16px;\n  margin: 10px auto 0px;\n  padding: 0px 0px 30px;\n  list-style: none;\n`;\n\nexport const MoviesItem = styled.li`\n  border-radius: 5px;\n  box-shadow: inset rgba(0, 0, 0, 0.5) -3px -3px 8px, inset rgba(255, 255, 255, 0.9) 3px 3px 8px,\n    rgba(0, 0, 0, 0.8) 3px 3px 8px -3px;\n  overflow: hidden;\n`;\n\nexport const LinkPoster = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Poster = styled.img`\n  display: inline-block;\n  max-width: 100%;\n  height: auto;\n  width: 100%;\n  min-height: 410px;\n\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  display: flex;\n  justify-content: center;\n  padding-top: 18px;\n  padding-bottom: 22px;\n  align-items: center;\n  text-align: center;\n  font-style: italic;\n  color: white;\n  color: black;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getTrending } from 'services/Api';\nimport { LinkPoster, Main, MoviesItem, MoviesList, MovieTitle, Poster, Title } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrending().then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <Main>\n        <Title>Trending today</Title>\n        <MoviesList>\n          {movies.map(movie => (\n            <MoviesItem key={movie.id}>\n              <LinkPoster to={`movies/${movie.id}`} state={{ from: location }}>\n                <Poster\n                  src={\n                    (movie.poster_path = `https://www.themoviedb.org/t/p/w500/${movie.poster_path}`)\n                  }\n                  alt={movie.title}\n                />\n                <MovieTitle>{movie.title}</MovieTitle>\n              </LinkPoster>\n            </MoviesItem>\n          ))}\n        </MoviesList>\n      </Main>\n    </>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '5f61bbc4be8c630bff5f11f3eb886ee5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getQuery = async query => {\n  const response = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n  return response.data.results;\n};\n"],"names":["Main","styled","Title","MoviesList","MoviesItem","LinkPoster","Link","Poster","MovieTitle","useState","movies","setMovies","location","useLocation","useEffect","getTrending","then","map","movie","to","id","state","from","src","poster_path","alt","title","API_KEY","axios","response","data","results","getDetails","movieId","getCast","cast","getReviews","getQuery","query"],"sourceRoot":""}