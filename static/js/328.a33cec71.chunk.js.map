{"version":3,"file":"static/js/328.a33cec71.chunk.js","mappings":"6PAEaA,EAAWC,EAAAA,GAAAA,GAAH,yJASRC,EAAWD,EAAAA,GAAAA,GAAH,uQAURE,EAAUF,EAAAA,GAAAA,IAAH,8NAWPG,EAAWH,EAAAA,GAAAA,GAAH,yGAORI,EAAgBJ,EAAAA,GAAAA,EAAH,6D,mBCA1B,EAjCa,WACX,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQN,GAASO,KAAKH,EACvB,GAAE,CAACJ,KAGF,8BACGG,EAAQK,QACP,SAACd,EAAD,UACGS,EAAQM,KAAI,SAAAC,GAAM,OACjB,UAACd,EAAD,YACE,SAACC,EAAD,CACEc,IACED,EAAOE,aAAP,8CAC2CF,EAAOE,cAC9CC,EAENC,IAAKJ,EAAOK,iBAEd,SAACjB,EAAD,UAAWY,EAAOK,iBAClB,SAAChB,EAAD,UAAgBW,EAAOM,cAVVN,EAAOO,GADL,OAgBrB,sEAIP,C,mMCpCKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAU,mCAAG,WAAMxB,GAAN,uFACDmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,oBAAsCkB,IADrC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKVhB,EAAO,mCAAG,WAAMN,GAAN,uFACEmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,4BAA8CkB,IADhD,cACfG,EADe,yBAEdA,EAASC,KAAKG,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAM1B,GAAN,uFACDmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,4BAA8CkB,IAD7C,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKVI,EAAQ,mCAAG,WAAMC,GAAN,uFACCT,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,kBAAmDU,IADpD,cAChBP,EADgB,yBAEfA,EAASC,KAAKC,SAFC,2CAAH,qD","sources":["pages/Cast/Cast.styled.js","pages/Cast/Cast.jsx","services/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin: -15px;\n  text-align: center;\n  min-height: 450px;\n`;\n\nexport const CastItem = styled.li`\n  width: 200px;\n  height: 350px;\n  margin: 15px;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n    rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n`;\n\nexport const CastImg = styled.img`\n  height: 250px;\n  width: 100%;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.08);\n    cursor: zoom-in;\n  }\n`;\nexport const CastName = styled.h4`\n  margin-bottom: 0px;\n  font-size: 17px;\n  font-weight: 600;\n  color: black;\n`;\n\nexport const CastCharacter = styled.p`\n  font-size: 15px;\n  color: black;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/Api';\nimport { CastList, CastItem, CastImg, CastName, CastCharacter } from './Cast.styled';\nimport noPhoto from '../../images/no_image.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    getCast(movieId).then(setCredits);\n  }, [movieId]);\n\n  return (\n    <>\n      {credits.length ? (\n        <CastList>\n          {credits.map(credit => (\n            <CastItem key={credit.id}>\n              <CastImg\n                src={\n                  credit.profile_path\n                    ? `https://www.themoviedb.org/t/p/w500/${credit.profile_path}`\n                    : noPhoto\n                }\n                alt={credit.original_name}\n              />\n              <CastName>{credit.original_name}</CastName>\n              <CastCharacter>{credit.character}</CastCharacter>\n            </CastItem>\n          ))}\n        </CastList>\n      ) : (\n        <div> We don't have any cast for this movie.</div>\n      )}\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '5f61bbc4be8c630bff5f11f3eb886ee5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getQuery = async query => {\n  const response = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n  return response.data.results;\n};\n"],"names":["CastList","styled","CastItem","CastImg","CastName","CastCharacter","movieId","useParams","useState","credits","setCredits","useEffect","getCast","then","length","map","credit","src","profile_path","noPhoto","alt","original_name","character","id","API_KEY","axios","getTrending","response","data","results","getDetails","cast","getReviews","getQuery","query"],"sourceRoot":""}